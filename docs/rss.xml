<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Ray Blog</title><link>https://a2lvaro.github.io/blog</link><description>快乐每一天</description><copyright>Ray Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/154407375?v=4</url><title>avatar</title><link>https://a2lvaro.github.io/blog</link></image><lastBuildDate>Mon, 08 Sep 2025 16:29:25 +0000</lastBuildDate><managingEditor>Ray Blog</managingEditor><ttl>60</ttl><webMaster>Ray Blog</webMaster><item><title>50个VSCode的快捷键</title><link>https://a2lvaro.github.io/blog/post/50-ge-VSCode-de-kuai-jie-jian.html</link><description>&#13;
１.编辑器与窗口管理相关快捷键：&#13;
新建文件：&#13;
ctrl + n&#13;
文件之间的切换：&#13;
ctrl + Tab&#13;
打开一个新的VSCode编辑器：&#13;
ctrl  + shift + n&#13;
关闭当前窗口：&#13;
ctrl  + v&#13;
关闭当前的VSCode编辑器：&#13;
ctrl  + shift + w&#13;
切出一个新的编辑器窗口（最多切出三个）：&#13;
ctrl  + \&#13;
切换左中右三个编辑器窗口:&#13;
ctrl  + 1        ctrl  + 2        ctrl  + 3&#13;
控制台显示或隐藏：&#13;
 ctrl + ｀&#13;
&#13;
２.代码编辑相关快捷键：&#13;
行向左缩进：&#13;
ctrl + [&#13;
行向右缩进：&#13;
ctrl + ]&#13;
注释：&#13;
单行注释：ctrl + /， 注释后再按取消&#13;
取消单行注释：alt + shift + A 注释后再按取消&#13;
格式化代码：&#13;
shift + alt + f&#13;
移动行（选中行，整行向上/向下移动）：&#13;
向上移动一行：alt + up&#13;
向下移动一行：alt + down&#13;
在当前行下插入一行：&#13;
ctrl + enter&#13;
在当前行上方插入一行：&#13;
ctrl + shift + enter&#13;
复制当前行:&#13;
 向上复制一行：shift + alt + up&#13;
 向下复制一行：shift + alt + down&#13;
删除当前行：&#13;
ctrl +ｘ 或者   ctrl + shift + k&#13;
删除上一个单词(在打错字的时候很好用):&#13;
ctrl + Backspace&#13;
３.光标相关快捷键：&#13;
光标移动到行首：&#13;
home&#13;
光标移动到行尾：&#13;
end&#13;
移动到文件结尾:&#13;
ctrl + end&#13;
Fn键+右方向键是end&#13;
移动到文件开头：&#13;
ctrl + home&#13;
Fn键+左方向键是home&#13;
移动到定义处：&#13;
F12&#13;
查看定义处缩略图（指一眼看不过去）:&#13;
alt + F12&#13;
选择从光标到行尾的内容：&#13;
shift + end&#13;
选择从光标到行首的内容：&#13;
shift + home&#13;
删除光标右侧的所有内容（当前行）：&#13;
ctrl + delete&#13;
扩展/缩小选区范围：&#13;
shift + alt + ⬅    和   shift + alt + ➡&#13;
多行编辑（列编辑）：&#13;
alt + shift + 鼠标左键   或   ctrl + alt + down/up&#13;
同时选中所有匹配编辑（与当前行或选定内容匹配）：&#13;
ctrl + shift + L&#13;
下一个匹配的也被选中：&#13;
ctrl + d&#13;
回退上一个光标操作：&#13;
ctrl + u&#13;
手动保存：&#13;
ctrl + s&#13;
４.代码重构相关快捷键：&#13;
找到所有引用：&#13;
shift + F12&#13;
同时修改本文件中的所有匹配：&#13;
ctrl + F2&#13;
跳转到下一个Error 或 Warning：&#13;
当有多个错误时可以按F8&#13;
５.查找替换：&#13;
查找：&#13;
ctrl + f&#13;
查找并替换：&#13;
ctrl + h&#13;
６.文件相关快捷键&#13;
查找文件：&#13;
ctrl + p&#13;
７.显示相关的快捷键：&#13;
全屏显示（再次按则回复）：&#13;
F11&#13;
放大或缩小：&#13;
ctrl + /-&#13;
显示/隐藏左侧目录栏：&#13;
ctrl + b&#13;
显示资源管理器（光标切到侧边栏中才有效）：&#13;
ctrl + shirt + e&#13;
显示搜索（光标切到侧边栏才有效）：&#13;
ctrl + shirt + f&#13;
显示Debug:&#13;
ctrl + shift + d&#13;
显示Output:&#13;
ctrl + shift +ｕ&#13;
&#13;
&#13;
8.修改默认快捷键的方法:&#13;
![cc2190d1ab2bdc3fbc385825082ad364](https://github.com/user-attachments/assets/121a4a3c-845b-4f9f-8851-ac562b983264)&#13;
&#13;
。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/50-ge-VSCode-de-kuai-jie-jian.html</guid><pubDate>Sun, 29 Dec 2024 02:30:17 +0000</pubDate></item><item><title>OpenWrt 安装后overlay扩容</title><link>https://a2lvaro.github.io/blog/post/OpenWrt%20-an-zhuang-hou-overlay-kuo-rong.html</link><description>下面的教程实现直接将系统的空闲空间扩容&#13;
&#13;
我的环境&#13;
自编译L大的 OpenWrt 固件x86_64&#13;
系统分区为 ext4 格式（如果你用的只读文件系统，不用往后看了）&#13;
固件安装在 SSD 硬盘&#13;
扩容步骤&#13;
新建分区&#13;
先安装 cfdisk：&#13;
&#13;
opkg install cfdisk&#13;
&#13;
执行 cfdisk，上下键选择分区，左右键选择功能。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/OpenWrt%20-an-zhuang-hou-overlay-kuo-rong.html</guid><pubDate>Sat, 28 Dec 2024 05:17:44 +0000</pubDate></item><item><title>Debian增加auth.log日志</title><link>https://a2lvaro.github.io/blog/post/Debian-zeng-jia-auth.log-ri-zhi.html</link><description>&#13;
 &#13;
Debian默认没有auth.log文件的，auth.log日志文件，记录了ssh登录的一些信息，里面包括ip地址、端口号、用户名等信息，如下一条记录日志。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/Debian-zeng-jia-auth.log-ri-zhi.html</guid><pubDate>Sat, 28 Dec 2024 05:08:01 +0000</pubDate></item><item><title>搬瓦工开启密钥登陆(SSH_KEYS)VPS</title><link>https://a2lvaro.github.io/blog/post/ban-wa-gong-kai-qi-mi-yao-deng-lu-%28SSH_KEYS%29VPS.html</link><description>自从搬瓦工对控制面板进行了改版设计后，就支持了SSH_KEYS密钥登陆的功能，虽然这个功能一直都是可以自我安装使用的，但是当前放在了更明显的位置，还是希望更多的用户能够使用这个更安全的方式维护VPS。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/ban-wa-gong-kai-qi-mi-yao-deng-lu-%28SSH_KEYS%29VPS.html</guid><pubDate>Fri, 27 Dec 2024 04:38:23 +0000</pubDate></item><item><title>查询目标网站是否支持 OCSP Stapling</title><link>https://a2lvaro.github.io/blog/post/cha-xun-mu-biao-wang-zhan-shi-fou-zhi-chi-%20OCSP%20Stapling.html</link><description>&#13;
&#13;
&#13;
如何寻找 TLS1.3/H2 的网站&#13;
目标网站最低标准：国外网站，支持 TLSv1.3 与 H2，域名非跳转用&#13;
&#13;
加分项：IP 相近（更像，且延迟低），Server Hello 后的握手消息一起加密（如 dl.google.com），有 OCSP Stapling&#13;
&#13;
配置加分项：禁回国流量，TCP/80、UDP/443 也转发（REALITY 对外表现即为端口转发，目标 IP 冷门或许更好）&#13;
&#13;
可以使用这个网站：[点击访问](https://www.ssllabs.com/ssltest/index.html) ，来寻找 TLS1.3 / X25519 / H2 的指向站点&#13;
也可以使用这个网站：[点击访问](http://web.chacuo.net/netocspstapling) ，来查询目标网站是否支持 OCSP Stapling （加分项而已，不支持也没有太大关系）&#13;
&#13;
。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/cha-xun-mu-biao-wang-zhan-shi-fou-zhi-chi-%20OCSP%20Stapling.html</guid><pubDate>Fri, 21 Jun 2024 05:22:09 +0000</pubDate></item><item><title>什么是电信CTGNetGIA？与CN2GIA的区别</title><link>https://a2lvaro.github.io/blog/post/shen-me-shi-dian-xin-CTGNetGIA%EF%BC%9F-yu-CN2GIA-de-qu-bie.html</link><description>&#13;
一、什么是 CTGNet GIA?&#13;
&#13;
　　CTGNet (AS23764)，是中国电信全球公司 China Telecom Global(CTG)新构建的一个国际多业务承载网络，面向企业客户提供定制化的国际互联网专线接入服务(GIA)，以高速、稳定、良好的中国方向访问质量，为国内企业出海和海外企业提供很好的中国网络方案。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/shen-me-shi-dian-xin-CTGNetGIA%EF%BC%9F-yu-CN2GIA-de-qu-bie.html</guid><pubDate>Fri, 21 Jun 2024 04:57:07 +0000</pubDate></item><item><title>通过 Acme 脚本免费申请 SSL 证书，自动更新证书，免费 CA 证书申请教程</title><link>https://a2lvaro.github.io/blog/post/tong-guo-%20Acme%20-jiao-ben-mian-fei-shen-qing-%20SSL%20-zheng-shu-%EF%BC%8C-zi-dong-geng-xin-zheng-shu-%EF%BC%8C-mian-fei-%20CA%20-zheng-shu-shen-qing-jiao-cheng.html</link><description>&#13;
&#13;
1. 安装依赖软件&#13;
```&#13;
apt update&#13;
apt upgrade -y&#13;
apt install socat curl -y&#13;
```&#13;
2. 安装 acme 脚本&#13;
```&#13;
curl https://get.acme.sh | sh&#13;
```&#13;
3. 注册账号&#13;
替换 your@email.com为你的邮箱&#13;
&#13;
```&#13;
~/.acme.sh/acme.sh --register-account -m your@email.com&#13;
```&#13;
4.1 80 端口验证申请&#13;
如果你的 80 端口是空闲，也就是没有运行任何 Web 服务，那么 acme.sh 可以假装自己是一个 Web 服务，临时监听 80 端口，从而完成验证&#13;
&#13;
```&#13;
~/.acme.sh/acme.sh --issue -d your-domain.com --standalone&#13;
```&#13;
4.2 Nginx 验证申请&#13;
如果你的服务器已经部署了 Nginx 服务，并且域名已经在 Nginx 中进行了配置，那么可以通过验证 Nginx 的方式申请证书&#13;
&#13;
```&#13;
~/.acme.sh/acme.sh --issue -d your-domain.com --nginx&#13;
```&#13;
4.3 http 验证申请&#13;
如果你的服务器已经部署了网站环境。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/tong-guo-%20Acme%20-jiao-ben-mian-fei-shen-qing-%20SSL%20-zheng-shu-%EF%BC%8C-zi-dong-geng-xin-zheng-shu-%EF%BC%8C-mian-fei-%20CA%20-zheng-shu-shen-qing-jiao-cheng.html</guid><pubDate>Thu, 20 Jun 2024 03:28:33 +0000</pubDate></item><item><title>Vultr VPS开放端口</title><link>https://a2lvaro.github.io/blog/post/Vultr%20VPS-kai-fang-duan-kou.html</link><description>&#13;
&#13;
&#13;
使用Vultr遇到的问题，创建了一个VPS后，系统是Debian, 并在控制台设置了Firewall Group开放HTTP之后，还是无法访问80端口。</description><guid isPermaLink="true">https://a2lvaro.github.io/blog/post/Vultr%20VPS-kai-fang-duan-kou.html</guid><pubDate>Thu, 20 Jun 2024 02:57:27 +0000</pubDate></item></channel></rss>